// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("FICTION_DATABASE_URL")
}

model Character {
  id        Int      @id @default(autoincrement())
  name      String
  imageUrl  String
  biography String?  
  series    String?  
  songs     Song[]    
  currentRound Round? @relation(fields: [roundId], references: [id])
  roundId Int?
  votes Vote[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Song {
  id          Int       @id @default(autoincrement())
  title       String
  character   Character @relation(fields: [characterId], references: [id])
  characterId Int
  createdAt   DateTime  @default(now())
}

model Round{
  id  Int @id @default(autoincrement())
  name String
  description String
  contestants Character[]
  startDate DateTime
  endDate DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vote {
  id Int @id @default(autoincrement())
  character Character @relation(fields: [characterId], references: [id])
  characterId Int
  user User @relation(fields: [userId], references: [id])
  userId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([characterId, userId])
}

model User {
  id Int @id @default(autoincrement())
  displayName String
  userName String
  password String
  imageUrl String @default("https://i.pinimg.com/736x/18/c2/f7/18c2f7a303ad5b05d8a41c6b7e4c062b.jpg")
  votes Vote[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}